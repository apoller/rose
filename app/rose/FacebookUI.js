// Generated by CoffeeScript 1.8.0

/*
ROSE is a browser extension researchers can use to capture in situ
data on how users actually use the online social network Facebook.
Copyright (C) 2013

    Fraunhofer Institute for Secure Information Technology
    Andreas Poller <andreas.poller@sit.fraunhofer.de>

Authors

    Oliver Hoffmann <oliverh855@gmail.com>
    Sebastian Ruhleder <sebastian.ruhleder@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// require('Observers/Facebook/FacebookLikeObserver');

import CommentsCollection from 'rose/collections/comments';

var loadCss = function loadCss(link) {
  var cssLink;
  cssLink = $('<link>');
  $('head').append(cssLink);
  return cssLink.attr({
    rel: 'stylesheet',
    type: 'text/css',
    href: kango.io.getResourceUrl(link)
  });
};

export default (function () {
  FacebookUI.prototype._activeItem = {};
  FacebookUI.prototype._comments = new CommentsCollection();

  // FacebookUI.prototype._likeObserver = new FacebookLikeObserver();

  function FacebookUI() {
    var options;
    options = {
      debug: true,
      getAsync: false,
      fallbackLng: 'en',
      resGetPath: kango.io.getResourceUrl('res/locales/') + '__lng__/__ns__.json'
    };
    i18n.init(options);
    Handlebars.registerHelper('I18n', function(i18nKey) {
      var result;
      result = i18n.t(i18nKey);
      return new Handlebars.SafeString(result);
    });
    loadCss('res/semantic/semantic.min.css');
    loadCss('res/main.css');
    this._registerEventHandlers();
    this._injectCommentRibbon();
    this._injectReminder();
    this._injectSidebar();
    this._comments.fetch();
  }

  FacebookUI.prototype.injectUI = function() {};

  FacebookUI.prototype.redrawUI = function() {
    return this._injectCommentRibbon();
  };

  FacebookUI.prototype._injectSidebar = function() {
    if ($('.ui.sidebar').length > 0) {
      return;
    }
    return this._getTemplate('sidebar').then(function(source) {
      var template;
      return template = Handlebars.compile(source);
    }).then(function(template) {
      $('body').append(template());
      $('.ui.sidebar').sidebar();
      return $('.ui.rating').rating();
    });
  };

  FacebookUI.prototype._injectCommentRibbon = function() {
    return this._getTemplate('commentLabel').then(function(source) {
      var template;
      return template = Handlebars.compile(source);
    }).then(function(template) {
      if ($('.fbxWelcomeBoxName').length > 0) {
        $("*[data-timestamp]").not($('*[data-timestamp] .rose.comment').parent()).prepend(template());
        if ($("*[data-timestamp]").length <= 0) {
          return $('.userContentWrapper').not($('.userContentWrapper .rose.comment').parent()).prepend(template());
        }
      } else {
        $(".timelineUnitContainer").has(".fbTimelineFeedbackActions").not($(".timelineUnitContainer .rose.comment").parent()).prepend(template()).addClass('timeline');
        return $('.rose.comment').addClass('timeline');
      }
    });
  };

  FacebookUI.prototype._injectReminder = function() {
    if ($('.ui.nag').length > 0) {
      return;
    }
    return this._getSettings().then((function(_this) {
      return function(settings) {
        if (settings.reminder.isActive) {
          return _this._getTemplate('reminder');
        }
      };
    })(this)).then(function(source) {
      var template;
      return template = Handlebars.compile(source);
    }).then(function(template) {
      $('body').append(template());
      return $('.ui.nag').nag({
        easing: 'swing'
      });
    });
  };

  FacebookUI.prototype._getTemplate = function(template) {
    var promise;
    promise = new RSVP.Promise(function(resolve) {
      var details, resource;
      resource = 'res/templates/' + template + '.hbs';
      details = {
        url: resource,
        method: 'GET',
        async: false,
        contentType: 'text'
      };
      return kango.xhr.send(details, function(data) {
        return resolve(data.response);
      });
    });
    return promise;
  };

  FacebookUI.prototype._getSettings = function() {
    var promise;
    promise = new RSVP.Promise(function(resolve) {
      // return Storage.getSettings(resolve);
    });
    return promise;
  };

  FacebookUI.prototype._registerEventHandlers = function() {
    $('body').on('click', '.sidebar .cancel.button', function() {
      return $('.ui.sidebar').sidebar('hide');
    });

    $('body').on('click', '.sidebar .save.button', (function(_this) {
      return function() {
        $('.ui.sidebar').sidebar('hide');
        _this._activeItem.text = $('.sidebar textarea').val() || '';
        _this._activeItem.rating = $('.ui.rating').rating('get rating') || 0;
        _this._activeItem.network = 'facebook';
        //check is update or create
        _this._comments.create(_this._activeItem);
      };
    })(this));

    $('body').on('click', '.rose.comment', (function(_this) {
      return function(evt) {
        //Testing with static id
        var item = {record: {object: {id : 'thereisnohash'}}};
        $('.ui.sidebar').dimmer('show');
        $('.ui.sidebar').sidebar('push page');
        $('.ui.sidebar').sidebar('show');
        // if ($('.fbxWelcomeBoxName').length > 0) {
        //   item = _this._likeObserver.handleNode($(evt.target).siblings(), 'status');
        // } else {
        //   item = _this._likeObserver.handleNode($(evt.target), 'timeline');
        // }
        _this._activeItem = item.record.object;
        var comment = _this.comments.findWhere({contentId: item.record.object.id});
        if (comment !== null) {
          var activeComment = comment.get('record');
          var rating;
          $('.ui.form textarea').val(activeComment.text);
          for (var i = 0, len = activeComment.rating.length; i < len;  i++) {
            rating = activeComment.rating[i];
            $('.ui.rating:eq(' + i + ')').rating('set rating', rating);
          }
        } else {
          $('.ui.form textarea').val('');
          $('.ui.rating').rating('set rating', 0);
        }
        //When store does not repsoned??
        // $('.ui.sidebar').dimmer('hide');
      };
    })(this));

  };

  return FacebookUI;

})();
